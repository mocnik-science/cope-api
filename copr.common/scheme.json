{
  "urls": {
    "endpoint": "http://127.0.0.1:8081",
    "files": {
      "_data": "representations.json",
      "_info": "info.json"  
    },
    "representations": "representations.json",
    "info": "info.json"
  },
  "functions": {
    "stats": {
      "resultType": "dict",
      "query": {
        "number of representations": "length(*)",
        "number of things": "length(*.things[])"
      }
    },
    "apiVersion": {
      "resultType": "string",
      "query": "'0.1'"
    }
  },
  "macros": {
    "classes": {
      "entityOrPlace": {"repr:entity": "entity", "place:place": "place"},
      "aspectOrEntityOrPlace": {"repr:aspect": "aspect", "repr:entity": "entity", "place:place": "place"},
      "someComparator": {"repr:individualComparator": "individualComparator", "repr:collectionComparator": "collectionComparator", "repr:holisticComparator": "holisticComparator"}
    },
    "queries": {
      "==": {"query": "{parameter} == `{value}`", "removeParameterPostfix": "_"},
      "contains": {"query": "{parameter} && contains({parameter}, `{value}`)"},
      "has": {"query": "{not_value}{parameter}", "removeParameterPrefix": "has", "startParameterLower": true}
    }
  },
  "elementTypes": [
    {
      "name": "idLabel",
      "parameters": {
        "id": "id",
        "label": "label"
      }
    },
    {
      "name": "idClassLabel",
      "parameters": {
        "id": "id",
        "class": "class",
        "label": "label"
      }
    },
    {
      "name": "person",
      "parameters": {
        "surname": "surname",
        "givenName": "givenName",
        "name": "name"
      }
    },
    {
      "name": "representation",
      "parameters": {
        "id": "representation.id",
        "label": "representation.label",
        "description": "representation.description",
        "version": "representation.versionInfo.version",
        "timestamp": "representation.versionInfo.timestamp",
        "authors": {"query": "representation.versionInfo.authors", "class": "person"},
        "reviewers": {"query": "representation.versionInfo.reviewers", "class": "person"},
        "doi": "representation.zenodo.doi",
        "users": {"query": "representation.users", "class": "user"},
        "sources": {"query": "representation.sources", "class": "sources"},
        "entities": {"query": "things[?class == 'repr:entity']", "class": "entity"},
        "places": {"query": "things[?class == 'place:place']", "class": "place"},
        "references": {"query": "references", "class": "reference"},
        "literature": {"query": "literature", "class": "literature"}
      },
      "query": [
        "* | [",
        {
          "prefix": "?",
          "concat": "&&",
          "query": [
            {"parameter": "id", "macro": "==", "query": "representation.{parameter} == `{value}`"},
            {"parameter": "label", "macro": "contains", "query": "representation.{parameter} && contains(representation.{parameter}, `{value}`)"},
            {"parameter": "label_", "macro": "==", "query": "representation.{parameter} == `{value}`"},
            {"parameter": "description", "macro": "contains", "query": "representation.{parameter} && contains(representation.{parameter}, `{value}`)"}
          ]
        },
        "]"
      ]
    },
    {
      "name": "user",
      "parameters": {
        "particularPeople": "particularPeople",
        "particularPeople_people": {"query": "particularPeoplePeople || ''", "class": "person"},
        "generallyUsed": "generallyUsed"
      }
    },
    {
      "name": "sources",
      "parameters": {
        "ownUsage": "ownUsage",
        "ownUsage_users": {"query": "ownUsageUsers || ''", "class": "person"},
        "observation": "observation",
        "interviewsWithUsers": "interviewsWithUsers",
        "interviewsWithUsers_interviewees": {"query": "interviewsWithUsersInterviewees || ''", "class": "person"},
        "interviewsWithExperts": "interviewsWithExperts",
        "interviewsWithExperts_interviewees": {"query": "interviewsWithExpertsInterviewees || ''", "class": "person"},
        "scientificLiterature": "scientificLiterature",
        "nonScientificLiterature": "nonScientificLiterature",
        "commonKnowledge": "commonKnowledge",
        "other": "other",
        "other_source": {"query": "otherSource || ''", "class": "person"}
      }
    },
    {
      "name": "thing",
      "parameters": {
        "id": "id",
        "label": "label",
        "description": "description",
        "createdThroughProcessOfKind": {"query": "createdThroughProcessOfKind", "class": "idLabel"},
        "madeAccessibleThroughProcessOfKind": {"query": "madeAccessibleThroughProcessOfKind", "class": "idLabel"},
        "createdAndMadeAccessibleThroughProcess": "createdAndMadeAccessibleThroughProcess",
        "location": {"query": "location", "class": "location"},
        "files": {"query": "files", "class": "file"},
        "selections": {"query": "selections", "class": "selection"},
        "aspects": {"query": "aspects", "class": "aspect"}
      }
    },
    {
      "name": "entity",
      "baseclass": "thing",
      "parameters": {
        "entityKind": "entityKind",
        "manifestationKind": {"query": "manifestationKind", "class": "idLabel"},
        "mediaKind": {"query": "mediaKind", "class": "idClassLabel"},
        "unique": "unique",
        "weight": "weight",
        "size": "size"
      },
      "query": [
        "*.things[",
        {
          "prefix": "?",
          "concat": "&&",
          "query": [
            "class == 'repr:entity'",
            {"parameter": "label", "macro": "contains"},
            {"parameter": "label_", "macro": "=="},
            {"parameter": "description", "macro": "contains"},
            {"parameter": "entityKind", "macro": "=="},
            {"parameter": "manifestationKind", "macro": "=="},
            {"parameter": "mediaKind", "macro": "=="},
            {"parameter": "unique", "macro": "=="},
            {"parameter": "weight", "macro": "has"},
            {"parameter": "size", "macro": "has"},
            {"parameter": "hasFiles", "macro": "has"}
          ]
        },
        "][]"
      ]
    },
    {
      "name": "place",
      "baseclass": "thing",
      "parameters": {
        "sharednessKind": {"query": "sharednessKind", "class": "idLabel"},
        "experienceByTheRepresentationUser": {"query": "experienceByTheRepresentationUser", "class": "idLabel"},
        "withinCulture": "withinCulture",
        "withinTimePeriod": "withinTimePeriod"
      },
      "query": [
        "*.things[",
        {
          "prefix": "?",
          "concat": "&&",
          "query": [
            "class == 'place:place'",
            {"parameter": "label", "macro": "contains"},
            {"parameter": "label_", "macro": "=="},
            {"parameter": "description", "macro": "contains"},
            {"parameter": "sharednessKind", "macro": "=="},
            {"parameter": "experienceByTheRepresentationUser", "macro": "=="},
            {"parameter": "withinCulture", "macro": "contains"},
            {"parameter": "withinTimePeriod", "macro": "contains"},
            {"parameter": "hasFiles", "macro": "has"}
          ]
        },
        "][]"
      ]
    },
    {
      "name": "location",
      "parameters": {
        "lat": "lat",
        "lon": "lon",
        "locationAnonymization": {"query": "locationAnonymization", "class": "idLabel"}
      }
    },
    {
      "name": "file",
      "parameters": {
        "filename": "filename",
        "fileRelation": {"query": "fileRelation", "class": "idLabel"},
        "copyrightStatements": {"query": "copyrightStatements", "class": "copyrightStatement"}
      }
    },
    {
      "name": "copyrightStatement",
      "parameters": {
        "copyrightType": {"query": "copyrightType", "class": "idLabel"},
        "copyrightHolder": {"query": "copyrightHolderOrSource", "class": "person"},
        "copyrightSource": {"query": "copyrightHolderOrSource", "class": "person"},
        "copyrightLicense": {"query": "copyrightLicense", "class": "idLabel"}
      }
    },
    {
      "name": "selection",
      "parameters": {
        "id": "id",
        "label": "label",
        "x": "x",
        "y": "y",
        "startTime": "startTime",
        "endTime": "endTime",
        "startOffset": "startOffset",
        "endOffset": "endOffset",
        "file": {"queries": ["filename", {"query": "*.things[].files[?filename == `{__last}`][] | [0]", "global": true}], "class": "file"}
      }
    },
    {
      "name": "aspect",
      "parameters": {
        "id": "id",
        "qualities": {"query": "qualities", "class": "quality"},
        "comparators": {"query": "comparators", "class": "someComparator"}
      },
      "query": [
        "*.things[].aspects[",
        {
          "prefix": "?",
          "concat": "&&",
          "query": [
            {"parameter": "qualityKind", "macro": "==", "query": "qualities[?{parameter}.label == `{value}`]"},
            {"parameter": "qualityCanBeDescribedAs", "macro": "contains", "query": "qualities[?{parameter} && contains({parameter}, `{value}`)]"},
            {"parameter": "qualityCanBeDescribedAs_", "macro": "==", "query": "qualities[?{parameter} == `{value}`]"},
            {"parameter": "hasQualities", "macro": "has"},
            {"parameter": "hasComparators", "macro": "has"}
          ]
        },
        "][]"
      ]
    },
    {
      "name": "quality",
      "parameters": {
        "kind": {"query": "qualityKind", "class": "idClassLabel"},
        "canBeDescribedAs": "qualityCanBeDescribedAs"
      }
    },
    {
      "name": "comparator",
      "parameters": {
        "id": "id",
        "thing": {"queries": ["id", {"query": "*.things[?aspects[?comparators[?id == `{__last}`]]] | [0][0]", "global": true}], "class": "selection"}
      }
    },
    {
      "name": "individualComparator",
      "baseclass": "comparator",
      "parameters": {
        "selection": {"queries": ["id", {"query": "*.things[].selections[?id == `{__last}`][] | [0]", "global": true}], "class": "selection"}
      }
    },
    {
      "name": "collectionComparator",
      "baseclass": "comparator",
      "parameters": {
        "hasRelevantNumberOfComparators": "hasRelevantNumberOfComparators",
        "hasRelevantArrangementOfComparators": "hasRelevantArrangementOfComparators",
        "hasRelevantInterplayOfComparators": "hasRelevantInterplayOfComparators",
        "includesSelections": {"queries": ["includesSelections", {"query": "*.things[].selections[?contains(`{__last}`, id)][]", "global": true}], "class": "selection"}
      }
    },
    {
      "name": "holisticComparator",
      "baseclass": "comparator",
      "parameters": {}
    },
    {
      "name": "reference",
      "parameters": {
        "subject": {"queries": ["subject", {"query": "*.things[].aspects[?id == `{__last}`][] | *.things[?id == `{__last}`][] | [0]", "global": true}], "class": "aspectOrEntityOrPlace"},
        "typeOfReference": {"query": "typeOfReference", "class": "idLabel"},
        "object": {"queries": ["object", {"query": "*.things[].aspects[?id == `{__last}`][] | *.things[?id == `{__last}`][] | [0]", "global": true}], "class": "aspectOrEntityOrPlace"},
        "createdThroughProcessOfKind": {"query": "createdThroughProcessOfKind", "class": "idLabel"},
        "independentRelevance": "independentRelevance",
        "withinTheNotationalSystem": "withinTheNotationalSystem"
      },
      "query": [
        "*.references[",
        {
          "prefix": "?",
          "concat": "&&",
          "query": [
            {"parameter": "typeOfReference", "macro": "=="}
          ]
        },
        "][]"
      ]
    },
    {
      "name": "literature",
      "functionName": "literature",
      "parameters": {
        "type": "type",
        "author": "author",
        "editor": "editor",
        "institution": "institution",
        "title": "title",
        "bookTitle": "bookTitle",
        "address": "address",
        "journal": "journal",
        "volume": "volume",
        "number": "number",
        "event": "event",
        "eventAcronym": "eventAcronym",
        "eventNumber": "eventNumber",
        "publisher": "publisher",
        "edition": "edition",
        "chapter": "chapter",
        "url": "url",
        "accessedDate": "accessedDate",
        "arXivIdentifier": "arXivIdentifier",
        "arXivSubjectClass": "arXivSubjectClass",
        "year": "year",
        "month": "month",
        "pages": "pages",
        "doi": "doi",
        "howPublished": "howPublished",
        "note": "note"
      },
      "query": [
        "*.literature[",
        {
          "prefix": "?",
          "concat": "&&",
          "query": [
            {"parameter": "type", "macro": "=="},
            {"parameter": "author", "macro": "contains"},
            {"parameter": "author_", "macro": "=="},
            {"parameter": "editor", "macro": "contains"},
            {"parameter": "editor_", "macro": "=="},
            {"parameter": "title", "macro": "contains"},
            {"parameter": "title_", "macro": "=="},
            {"parameter": "bookTitle", "macro": "contains"},
            {"parameter": "bookTitle_", "macro": "=="},
            {"parameter": "journal", "macro": "contains"},
            {"parameter": "journal_", "macro": "=="},
            {"parameter": "event", "macro": "contains"},
            {"parameter": "event_", "macro": "=="},
            {"parameter": "year", "macro": "=="}
          ]
        },
        "][]"
      ]
    }
  ]
}
